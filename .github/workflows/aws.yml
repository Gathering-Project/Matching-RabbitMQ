name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 푸시되면 트리거

env:
  AWS_REGION: ap-northeast-2           # AWS 리전 (적절하게 수정)
  ECR_REPOSITORY: my-repository        # ECR 레포지토리 이름
  EC2_HOST: "43.200.54.163"           # EC2 IP
  EC2_USER: "ec2-user"                # EC2 사용자
  IMAGE_TAG: ${{ github.sha }}        # GitHub 커밋 해시를 태그로 사용
  DOCKER_IMAGE: "my-app"              # Docker 이미지 이름

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Gradle 빌드 (필요한 경우)
      - name: Build project using Gradle
        run: ./gradlew build

      # 3. AWS CLI 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CLOUD_AWS_S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CLOUD_AWS_S3_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 4. Docker 로그인 (ECR)
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # 5. Docker 이미지 빌드 및 ECR에 푸시
      - name: Build, tag, and push Docker image
        run: |
          docker build -t ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .
          docker tag ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      # 6. EC2에 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}  # 비공개 키를 GitHub Secrets에 저장
          port: 22
          script: |
            docker pull ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
            docker ps -q | xargs docker stop
            docker ps -a -q | xargs docker rm
            docker run -d -p 8080:8080 ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
            echo "배포 완료!"
