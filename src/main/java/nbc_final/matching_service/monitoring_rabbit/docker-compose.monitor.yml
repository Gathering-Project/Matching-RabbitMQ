#version: '3.8'
#
#networks:
#  monitoring-network:
#    driver: bridge
#
#services:
#  # Kafka Exporter
##  kafka-exporter:
##    image: danielqsj/kafka-exporter
##    container_name: kafka-exporter
##    environment:
###      command: ["--kafka.server=localhost:19092", "[--kafka.server=localhost:19093]", "[--kafka.server=localhost:19094]"]
##      KAFKA_BROKERS: kafka1:19092,kafka2:19093,kafka3:19094  # Kafka 브로커 주소 (적절히 수정)
###      KAFKA_BROKERS: kafka1:9092,kafka2:9093,kafka3:9094  # Kafka 브로커 주소 (적절히 수정)
##    ports:
##      - "9308:9308"  # Kafka Exporter의 Prometheus가 수집할 메트릭스 포트
##    networks:
##      - monitoring-network
##    depends_on:
##      - kafka1
##      - kafka2
##      - kafka3
##    restart: always
#
#  # Prometheus
#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    ports:
#      - "9090:9090"  # Prometheus 대시보드 포트
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Prometheus 설정 파일
#    networks:
#      - monitoring-network
##    depends_on:
##      - kafka-exporter
#    restart: always
#
#  # Grafana
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3000:3000"  # Grafana 대시보드 포트
#    networks:
#      - monitoring-network
##    depends_on:
##      - prometheus
#    restart: always



version: '3'

services:
  # Prometheus 설정
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  # Grafana 설정
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # 기본 Grafana 비밀번호 설정
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  grafana_data:
